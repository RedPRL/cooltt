import prelude

def el : type := sig (A : type) (a : A)
def el-patch : type := el # [ A .= nat | a .= 4 ]
def el-patch-partial : type := el # [ A .= nat ]

def patch/inhabit : el-patch := struct (A : nat) (a : 4)
def patch-partial/inhabit/infer : el-patch-partial := struct (a : 4)
def patch/inhabit/infer : el-patch := struct
def patch/inhabit/hole : el-patch := struct (A : ?) (a : ?)

#print el-patch
#print el-patch-partial
#print patch/inhabit
#print patch-partial/inhabit/infer
#print patch/inhabit/infer

def patch-depends : type := {sig (A : type) (B : type)} # [ A .= nat | B .= A ]
#print patch-depends
def patch-depends/inhabit : patch-depends := struct (A : nat) (B : nat)

def testing (A Z : type) (B : A → type) (p : Z → sig (x : A) (bx : B x)) (z : Z) : sig (x : A) (bx : B x) # [ x .= p z.x | bx .= p z.bx ] :=
  p z

#print testing

-- Record Patching + Total Space Conversion
#fail def total-space/fail (fam : sig (A : type) (a : A) -> nat -> type) : type := fam

abstract
def category : type :=
  sig
    (ob : type)
    (hom : sig (s : ob) (t : ob) → type)
    (idn : (x : ob) -> hom # [ s .= x | t .= x ])
    (seq : (f : hom) -> (g : hom # [ s .= f.t ]) -> hom # [ s .= f.s | t .= g.t ])
    (seqL : (f : hom) -> path {hom # [ s .= f.s | t .= f.t ]} {seq {idn {f.s}} f} f)
    (seqR : (f : hom) -> path {hom # [ s .= f.s | t .= f.t ]} {seq f {idn {f.t}}} f)
    (seqA : (f : hom) -> (g : hom # [ s .= f.t ]) -> (h : hom # [ s .= g.t ]) -> path {hom # [ s .= f.s | t .= h.t ]} {seq f {seq g h}} {seq {seq f g} h})

def types : category :=
  unfold category in
  struct
    (ob : type)
    (hom : args => {args.s} -> {args.t})
    (idn : x z => z)
    (seq : f g x => g {f x})
    (seqL : f i => f)
    (seqR : f i => f)
    (seqA : f g h i x => h {g {f x}})


def test-auto (fam : sig (x : nat) -> type) : type := fam
#print test-auto

def test-auto-patch (fam : sig (x : nat) -> type) : type := fam # [x .= 0]
#print test-auto-patch

def U : type := type
def test-unfold-total (fam : sig (x : nat) -> U) : U := fam
#print test-unfold-total
