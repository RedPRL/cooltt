def mycoe/fun : {
  (A : (i : dim) -> univ) (B : (i: dim) -> univ)
  (coe/A : (r : dim) (x : A r) (i : dim) -> sub {A i} {i=r} x)
  (coe/B : (r : dim) (x : B r) (i : dim) -> sub {B i} {i=r} x)
  (r : dim) (f : (_ : A r) -> B r) (i : dim) ->
  sub {(_ : A i) -> B i} {i=r} f
} = {
 \A B coe/A coe/B r f i x =>
 coe/B r {f {coe/A i x r}} i
}

def mycom/fun : {
  (A : dim -> univ)
  (B : dim -> univ)
  (com/A : (r : dim) (phi : cof) (p : (i : dim) (_ : [i=r \/ phi]) -> A i) (i : dim) -> sub {A i} {i=r \/ phi} {p i _})
  (com/B : (r : dim) (phi : cof) (p : (i : dim) (_ : [i=r \/ phi]) -> B i) (i : dim) -> sub {B i} {i=r \/ phi} {p i _})
  (r : dim) (phi : cof) (p : (i : dim) (_ : [i=r \/ phi]) (_ : A i) -> B i) (i : dim) -> sub {(_ : A i) -> B i} {i=r \/ phi} {p i _}
} = {
  \A B com/A com/B r phi p r' x =>
  com/B r phi {\j _ => p j _ {com/A r' #f {\_ _ => x} j}} r'
}

normalize mycom/fun

def coe/intro : {
  (A : dim -> univ) (r : dim) (r' : dim) (x : A r) ->
  sub {A r'} {r=r'} x
} = {
 \A r r' x => coe A r r' x
}

def coe/pi : {
  (A : dim -> univ) (B : (i : dim) -> A i -> univ)
  (r : dim) (r' : dim)
  (f : (x : A r) -> B r x) ->
  sub {(x : A r') -> B r' x} #t {\x => coe {\i => B i {coe A r' i x}} r r' {f {coe A r' r x}}}
} = {
 \A B r r' f =>
 coe {\i => (x : A i) -> B i x} r r' f
}

normalize coe/pi

def coe/sigma : {
  (A : dim -> univ) (B : (i : dim) -> A i -> univ)
  (r : dim) (r' : dim)
  (p : (x : A r) * B r x) ->
  sub {(x : A r') * B r' x} #t    [coe A r r' {fst p}, coe {\i => B i {coe A r i {fst p}}} r r' {snd p}]
} = {
  \A B r r' p =>
  coe {\i => (x : A i) * B i x} r r' p
}

normalize coe/sigma

def hcom/intro : {
  (A : univ) (r : dim) (r' : dim) (phi : cof)
  (p : (i : dim) (_ : [i=r \/ phi]) -> A) ->
  sub A {r=r' \/ phi} {p r' _}
} = {
  \A r r' phi p =>
  hcom A r r' phi p
}

def hcom/fun : {
  (A : univ) (B : univ) (r : dim) (r' : dim) (phi : cof)
  (p : (i : dim) (_ : [i=r \/ phi]) -> A -> B) ->
  sub {A -> B} {0=0} {\x => hcom B r r' phi {\j _ => p j _ x}}
} = {
  \A B r r' phi p =>
  hcom {A -> B} r r' phi p
}

normalize hcom/fun

def com/intro : {
  (A : dim -> univ) (r : dim) (r' : dim) (phi : cof)
  (p : (i : dim) (_ : [i=r \/ phi]) -> A i) ->
  sub {A r'} {r=r' \/ phi} {p r' _}
} = {
  \A r r' phi p =>
  com A r r' phi p
}

normalize com/intro

def com/decomposition : {
  (A : dim -> univ) (r : dim) (r' : dim) (phi : cof)
  (p : (i : dim) (_ : [i=r \/ phi]) -> A i) ->
  sub {A r'} {0=0} {hcom {A r'} r r' phi {\j _ => coe A j r' {p j _}}}
} = {
  \A r r' phi p =>
  com A r r' phi p
}
