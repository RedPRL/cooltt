def test-freshen (_x : nat) : nat → nat → nat → nat :=
  _x _x _x => _x

print test-freshen

def test-freshen/0 (x : nat) (x0 : nat) : nat := x0

print test-freshen/0

def test-freshen/split (x : nat) : {nat → nat} × {nat → nat} :=
  [ x => x, x => x ]

print test-freshen/split

def test-freshen/suffix (x : nat) (x2 : nat) : nat → nat → nat → nat :=
  x x x => x

print test-freshen/suffix 
