--------------------[axiom.cooltt]--------------------
axiom.cooltt:6.11-6.15 [Info]:
  Computed normal form of path as path

axiom.cooltt:12.11-12.15 [Info]:
  Computed normal form of test as unlock u/path : φ/path in _x i => 3

axiom.cooltt:18.7-18.12 [Info]:
  test2
  : unlock u/path : φ/path in
    _x =>
    ext {i =>
         ext {i₁ => nat} {i => i <= 0 ∨ 1 <= i} {i₁ _x₁ =>
                                                 [ i₁ <= 0 => 3
                                                 | 1 <= i₁ => 3
                                                 ]}} {i => i <= 0 ∨ 1 <= i} {
    i _x₁ => [ i <= 0 => _x₃ => test _x₃ | 1 <= i => _x₃ => 3 ]}
  = unlock u/path : φ/path in _x _x₁ _x₂ => 3

axiom.cooltt:31.11-31.31 [Info]:
  Computed normal form of test-globals/path i0 as 1

axiom.cooltt:32.11-32.31 [Info]:
  Computed normal form of test-globals/path i1 as 2

axiom.cooltt:40.7-40.15 [Info]:
  ψ/proof : locked {ψ/i <= ψ/j ∧ ψ/j <= ψ/i}

axiom.cooltt:47.7-47.14 [Info]:
  ψ/test
  : unlock ψ/proof : ψ/i <= ψ/j ∧ ψ/j <= ψ/i in _x => ext nat ⊤ {_x₁ => 4}
  = unlock ψ/proof : ψ/i <= ψ/j ∧ ψ/j <= ψ/i in _x => 4

--------------------[base-types.cooltt]--------------------
--------------------[circle.cooltt]--------------------
circle.cooltt:20.11-20.20 [Info]:
  Computed normal form of loopn 5 as
   i =>
   hcom circle 0 1 {i <= 0 ∨ 1 <= i}
     {_x _x₁ =>
      [ _x <= 0 =>
        hcom circle 0 1 {i <= 0 ∨ 1 <= i}
          {_x₃ _x₄ =>
           [ _x₃ <= 0 =>
             hcom circle 0 1 {i <= 0 ∨ 1 <= i}
               {_x₆ _x₇ =>
                [ _x₆ <= 0 =>
                  hcom circle 0 1 {i <= 0 ∨ 1 <= i}
                    {_x₉ _x₁₀ =>
                     [ _x₉ <= 0 =>
                       hcom circle 0 1 {i <= 0 ∨ 1 <= i}
                         {_x₁₂ _x₁₃ =>
                          [ _x₁₂ <= 0 => base
                          | i <= 0 => base
                          | 1 <= i => loop _x₁₂
                          ]}
                     | i <= 0 => base
                     | 1 <= i => loop _x₉
                     ]}
                | i <= 0 => base
                | 1 <= i => loop _x₆
                ]}
           | i <= 0 => base
           | 1 <= i => loop _x₃
           ]}
      | i <= 0 => base
      | 1 <= i => loop _x
      ]}

--------------------[com.cooltt]--------------------
com.cooltt:21.11-21.20 [Info]:
  Computed normal form of mycom/fun as
   A B com/A com/B r φ p i x =>
   com/B r φ {j _x => p j * {com/A i ⊥ {_x₁ _x₂ => x} j}} i

com.cooltt:34.11-34.17 [Info]:
  Computed normal form of coe/pi as
   A B r r' f _x =>
   coe {_x₁ => B _x₁ {coe {_x₂ => A _x₂} r' _x₁ _x}} r r'
     {f {coe {_x₁ => A _x₁} r' r _x}}

com.cooltt:44.11-44.20 [Info]:
  Computed normal form of coe/sigma as
   A B r r' p =>
   [ coe {_x => A _x} r r' {fst p}
   , coe {_x => B _x {coe {_x₁ => A _x₁} r _x {fst p}}} r r' {snd p}
   ]

com.cooltt:64.11-64.20 [Info]:
  Computed normal form of coe/pathd as
   A r r' a b m _x =>
   hcom {A r' _x} r r' {_x <= 0 ∨ 1 <= _x}
     {_x₁ _x₂ =>
      coe {_x₃ => A _x₃ _x} _x₁ r'
        [ _x <= 0 ∨ 1 <= _x => [ _x <= 0 => a _x₁ | 1 <= _x => b _x₁ ]
        | _x₁ <= r ∧ r <= _x₁ => m _x
        ]}

com.cooltt:80.11-80.19 [Info]:
  Computed normal form of hcom/fun as
   A B r r' φ p _x => hcom B r r' φ {_x₁ _x₂ => p _x₁ _x₂ _x}

com.cooltt:89.11-89.20 [Info]:
  Computed normal form of com/intro as
   A r r' φ p =>
   hcom {A r'} r r' φ {_x _x₁ => coe {_x₂ => A _x₂} _x r' {p _x _x₁}}

--------------------[cool-total-space.cooltt]--------------------
cool-total-space.cooltt:6.7-6.20 [Info]:
  fully-patched
  : (fam : (_x : sig (x : nat) ) → type) → (fib : fam {struct (x : 0) }) → 
  sig (x : ext nat ⊤ {_x => 0}) (fib : fam {struct (x : 0) }) 
  = fam fib => struct (x : 0) (fib : fib) 

cool-total-space.cooltt:10.7-10.24 [Info]:
  not-fully-patched
  : (fam : (_x : sig (x : nat) ) → type) → (fib : fam {struct (x : 0) }) → 
  sig (x : nat) (fib : fam {struct (x : x) }) 
  = fam fib => struct (x : 0) (fib : fib) 

cool-total-space.cooltt:14.7-14.20 [Info]:
  no-insert-fib
  : (fam : (_x : sig (x : nat) ) → type) → (total : sig (x : nat) 
                                                    (fib : fam {struct (x : x)
                                                                })
                                                    ) → nat
  = fam total => total @ x

cool-total-space.cooltt:18.7-18.23 [Info]:
  insert-fib-plain
  : (fam : (_x : sig (x : nat) ) → type) → (total : sig (x : nat) 
                                                    (fib : fam {struct (x : x)
                                                                })
                                                    ) → fam {struct (x : 
                                                             total @ x) }
  = fam total => total @ fib

cool-total-space.cooltt:23.7-23.20 [Info]:
  insert-fib-pi
  : sig (fam : (_x : sig (x : nat) ) → type) 
    (test : (_x : sig (x : nat) (fib : fam {struct (x : x) }) ) → nat) 
  = struct (fam : {_x => (_x₁ : nat) → nat}) 
    (test : {total => {total @ fib} 0}) 

cool-total-space.cooltt:28.7-28.20 [Info]:
  insert-fib-sg
  : sig (fam : (_x : sig (x : nat) ) → type) 
    (test : (_x : sig (x : nat) (fib : fam {struct (x : x) }) ) → nat) 
  = struct (fam : {_x => (_x₁ : nat) × nat}) 
    (test : {total => fst {total @ fib}}) 

cool-total-space.cooltt:33.7-33.27 [Info]:
  no-insert-fib-record
  : sig (fam : (_x : sig (x : nat) ) → type) 
    (test : (_x : sig (x : nat) (fib : fam {struct (x : x) }) ) → nat) 
  = struct (fam : {_x => sig (y : nat) }) 
    (test : {total => {total @ fib} @ y}) 

cool-total-space.cooltt:35.64-35.65 [Info]:
  Emitted hole:
    fam : (_x : sig (x : nat) ) → type
    |- ? : fam {struct (x : 0) }


--------------------[elab.cooltt]--------------------
elab.cooltt:7.11-7.24 [Info]:
  Computed normal form of boundary-test as
   i _x => [ 1 <= i => 5 | i <= 0 => 19 ]

elab.cooltt:18.11-18.23 [Info]:
  Computed normal form of pi-code-test as (x : nat) → nat

elab.cooltt:28.11-28.21 [Info]:
  Computed normal form of simple-let as A a => a

elab.cooltt:33.6-33.13 [Info]:
  Emitted hole:
    x : nat
    y : nat
    z : nat
    |- ?tyhole : type


elab.cooltt:35.9-35.16 [Info]:
  Emitted hole:
    y : nat
    z : nat
    |- ?tmhole : (z₁ : nat) → ?tyhole y z z₁


elab.cooltt:42.6-42.12 [Info]:
  Emitted hole:
    x : nat
    |- ?hole1 : path nat x x


--------------------[equation.cooltt]--------------------
equation.cooltt:10.7-10.23 [Info]:
  equational/trans
  : (a : type) → (x : a) → (y : a) → (z : a) → (p : path a x y) → (q : path a y z) → path a x z
  = a x y z p q _x =>
    hcom a 0 1 {_x <= 0 ∨ 1 <= _x}
      {_x₁ _x₂ =>
       [ _x₁ <= 0 ∨ _x <= 0 => p _x
       | 1 <= _x =>
         hcom a 0 1 {_x₁ <= 0 ∨ 1 <= _x₁}
           {_x₄ _x₅ => [ _x₄ <= 0 ∨ _x₁ <= 0 => q _x₁ | 1 <= _x₁ => z ]}
       ]}

equation.cooltt:18.7-18.26 [Info]:
  equational/refl/nat
  : path nat 4 4
  = _x =>
    hcom nat 0 1 {_x <= 0 ∨ 1 <= _x}
      {_x₁ _x₂ => [ _x₁ <= 0 ∨ _x <= 0 => 4 | 1 <= _x => 4 ]}

--------------------[evan.cooltt]--------------------
--------------------[export.cooltt]--------------------
Emitted namespace under ∷
  ? = { a1 => a1 }

Emitted namespace under ∷
  ? = { a1 => a1; a2 => a2; a3 => a3 }

Emitted namespace under ∷
  ? = { a1 => a1; a2 => a2; a3 => a3; b1 => a1 }

Emitted namespace under ∷
  ? = { a1 => a1; a2 => a2; a3 => a3; b1 => a1 }

Emitted namespace under ∷
  ? = { a1 => a1; a2 => a2; a3 => a2; b1 => a1 }

Emitted namespace under ∷
  ? = { a1 => a1; a2 => a2; a3 => a3 }

--------------------[groupoid-laws.cooltt]--------------------
--------------------[hcom-type.cooltt]--------------------
hcom-type.cooltt:17.8-17.13 [Info]:
  Emitted hole:
    i : 𝕀
    _x : [ i <= 0 ∨ 1 <= i ]
    |- ?asdf : nat


hcom-type.cooltt:17.16-17.17 [Info]:
  Emitted hole:
    i : 𝕀
    |- ? : (_x : [ i <= 0 ]) → nat
    
    Boundary:
    i <= 0 ∨ 1 <= i
    |- _x => ?asdf 0 *


hcom-type.cooltt:17.18-17.19 [Info]:
  Emitted hole:
    i : 𝕀
    |- ? : nat
    
    Boundary:
    i <= 0 ∨ i <= 0 ∨ 1 <= i
    |- i <= 0 => ?asdf 0 *
       1 <= i => ?asdf 1 *


--------------------[hlevel.cooltt]--------------------
hlevel.cooltt:32.7-32.12 [Info]:
  hProp
  : type
  = hLevel 1

hlevel.cooltt:33.11-33.16 [Info]:
  Computed normal form of hProp as
   (A : type) × (c : A) → (c' : A) → ext {i => A} {i => i <= 0 ∨ 1 <= i} {
                                     i _x => [ i <= 0 => c | 1 <= i => c' ]}

--------------------[holes.cooltt]--------------------
holes.cooltt:5.7-5.13 [Info]:
  Emitted hole:
    A : type
    p : (_x : 𝕀) → A
    q : (i : 𝕀) → sub A {i <= 0} {p 1}
    i : 𝕀
    |- ? : A
    
    Boundary:
    i <= 0 ∨ 1 <= i
    |- i <= 0 => p 0
       1 <= i => q 1


holes.cooltt:8.25-8.26 [Info]:
  Emitted hole:
    A : type
    p : (_x : 𝕀) → A
    q : (i : 𝕀) → sub A {i <= 0} {p 1}
    i : 𝕀
    |- ? : (_x : 𝕀) → A


holes.cooltt:8.27-8.28 [Info]:
  Emitted hole:
    A : type
    p : (_x : 𝕀) → A
    q : (i : 𝕀) → sub A {i <= 0} {p 1}
    i : 𝕀
    |- ? : (i₁ : 𝕀) → sub A {i₁ <= 0} {#2 A p q i 1}


holes.cooltt:8.7-8.35 [Info]:
  Emitted hole:
    A : type
    p : (_x : 𝕀) → A
    q : (i : 𝕀) → sub A {i <= 0} {p 1}
    i : 𝕀
    |- {! trans/filler A {#2 A p q i} {#3 A p q i} 1 i !} : A
    
    Boundary (unsatisfied):
    i <= 0 ∨ 1 <= i
    |- i <= 0 => p 0
       1 <= i => q 1


holes.cooltt:11.7-11.35 [Info]:
  Emitted hole:
    A : type
    p : (_x : 𝕀) → A
    q : (i : 𝕀) → sub A {i <= 0} {p 1}
    i : 𝕀
    |- {! trans/filler A {_x => p _x} {_x => q _x} 0 i !} : A
    
    Boundary (unsatisfied):
    i <= 0 ∨ 1 <= i
    |- i <= 0 => p 0
       1 <= i => q 1


holes.cooltt:14.7-14.35 [Info]:
  Emitted hole:
    A : type
    p : (_x : 𝕀) → A
    q : (i : 𝕀) → sub A {i <= 0} {p 1}
    i : 𝕀
    |- {! trans/filler A {_x => p _x} {_x => q _x} 1 i !} : A
    
    Boundary (satisfied):
    i <= 0 ∨ 1 <= i
    |- i <= 0 => p 0
       1 <= i => q 1


holes.cooltt:18.26-18.30 [Info]:
  Emitted hole:
    A : type
    p : (_x : 𝕀) → A
    q : (i : 𝕀) → sub A {i <= 0} {p 1}
    i : 𝕀
    |- ? : (_x : 𝕀) → (_x₁ : [ _x <= 0 ∨ i <= 0 ∨ 1 <= i ]) → A


holes.cooltt:18.7-18.30 [Info]:
  fail cone-of-silence-hcom:
  Expected #10 A p q i 1 * = [ i <= 0 => p 0 | 1 <= i => q 1 ] : A

--------------------[import.cooltt]--------------------
Emitted namespace under p2
  ?cool = { cong => cong; funext => funext; path-p => path-p; q∷t => ⋆
          ; refl => refl; symm => symm; symm/filler => symm/filler
          ; trans => trans; trans/filler => trans/filler; u => unit
          ; unit/eta => unit/eta }

Emitted namespace under ∷
  ?all = { p1∷cong => cong; p1∷funext => funext; p1∷path => path
         ; p1∷path-p => path-p; p1∷refl => refl; p1∷symm => symm
         ; p1∷symm/filler => symm/filler; p1∷trans => trans
         ; p1∷trans/filler => trans/filler; p1∷unit/eta => unit/eta
         ; p1∷⋆ => ⋆; p2∷cong => cong; p2∷funext => funext
         ; p2∷path-p => path-p; p2∷q∷t => ⋆; p2∷refl => refl; p2∷symm => symm
         ; p2∷symm/filler => symm/filler; p2∷trans => trans
         ; p2∷trans/filler => trans/filler; p2∷u => unit
         ; p2∷unit/eta => unit/eta }

Emitted namespace under ∷
  ? = { cong => cong; funext => funext; path => path; path-p => path-p
      ; refl => refl; symm => symm; symm/filler => symm/filler
      ; trans => trans; trans/filler => trans/filler; unit => unit
      ; unit/eta => unit/eta; ⋆ => ⋆ }

import.cooltt:26.7-26.14 [Info]:
  cool-tt
  : unit
  = 0

Emitted namespace under p2
  ? = { cong => cong; funext => funext; path-p => path-p; q∷t => ⋆
      ; refl => refl; symm => symm; symm/filler => symm/filler
      ; trans => trans; trans/filler => trans/filler; u => unit
      ; unit/eta => unit/eta }

--------------------[inequality.cooltt]--------------------
inequality.cooltt:11.7-11.10 [Info]:
  bar
  : ext nat ⊤ {_x => 0}
  = 0

--------------------[isos.cooltt]--------------------
--------------------[monoid.cooltt]--------------------
nat.cooltt:9.11-9.16 [Info]:
  Computed normal form of + 2 3 as 5

monoid.cooltt:19.7-19.17 [Info]:
  monoid/nat
  : sig (C : ext type ⊤ {_x => nat}) (op : (_x : nat) → (_x₁ : nat) → nat) 
    (z : nat) (idL : (x : nat) → path nat {op z x} x) 
    (idR : (x : nat) → path nat {op x z} x) 
    (assoc : (a : nat) → (b : nat) → (c : nat) → path nat {op {op a b} c} {op a {op b c}})
    
  = struct (C : nat) (op : {_x _x₁ => + _x _x₁}) (z : 0) 
    (idL : {_x _x₁ => +-left-unit _x _x₁}) 
    (idR : {_x _x₁ => +-right-unit _x _x₁}) 
    (assoc : {_x _x₁ _x₂ _x₃ => +-assoc _x _x₁ _x₂ _x₃}) 

monoid.cooltt:27.7-27.19 [Info]:
  monoid/nat/+
  : sig (C : ext type ⊤ {_x => nat}) 
    (op : ext {(_x : nat) → (_x₁ : nat) → nat} ⊤ {_x _x₁ _x₂ => + _x₁ _x₂}) 
    (z : nat) (idL : (x : nat) → path nat {+ z x} x) 
    (idR : (x : nat) → path nat {+ x z} x) 
    (assoc : (a : nat) → (b : nat) → (c : nat) → path nat {+ {+ a b} c} {+ a {+ b c}})
    
  = struct (C : nat) (op : {_x _x₁ => + _x _x₁}) (z : 0) 
    (idL : {_x _x₁ => +-left-unit _x _x₁}) 
    (idR : {_x _x₁ => +-right-unit _x _x₁}) 
    (assoc : {_x _x₁ _x₂ _x₃ => +-assoc _x _x₁ _x₂ _x₃}) 

--------------------[names.cooltt]--------------------
names.cooltt:5.7-5.14 [Info]:
  x∷y∷z
  : (u∷v : nat) → nat
  = u∷v => u∷v

--------------------[nat-path.cooltt]--------------------
nat.cooltt:9.11-9.16 [Info]:
  Computed normal form of + 2 3 as 5

nat-path.cooltt:15.11-15.12 [Info]:
  Computed normal form of J as
   A p C d =>
   coe {i =>
        C {_x =>
           hcom A 0 _x {i <= 0 ∨ 1 <= i}
             {k _x₁ => [ k <= 0 ∨ i <= 0 => p 0 | 1 <= i => p k ]}}} 0 1
     d

nat-path.cooltt:56.11-56.18 [Info]:
  Computed normal form of +-assoc as
   _x =>
   elim _x @ {_x₁ =>
              (y : nat) → (z : nat) → ext {i => nat} {i => i <= 0 ∨ 1 <= i} {
                                      i _x₂ =>
                                      [ i <= 0 =>
                                        elim {elim _x₁ @ {_x₄ =>
                                                          (_x₅ : nat) → nat}
                                                [ zero => n => n
                                                | suc => _x₄ ih n =>
                                                         suc {ih n}
                                                ] y} @ {_x₄ =>
                                                        (_x₅ : nat) → nat}
                                          [ zero => n => n
                                          | suc => _x₄ ih n => suc {ih n}
                                          ] z
                                      | 1 <= i =>
                                        elim _x₁ @ {_x₄ => (_x₅ : nat) → nat}
                                          [ zero => n => n
                                          | suc => _x₄ ih n => suc {ih n}
                                          ] {elim y @ {_x₄ =>
                                                       (_x₅ : nat) → nat}
                                               [ zero => n => n
                                               | suc => _x₄ ih n =>
                                                        suc {ih n}
                                               ] z}
                                      ]}}
     [ zero => y z i =>
               elim y @ {_x₁ => (_x₂ : nat) → nat}
                 [ zero => n => n
                 | suc => _x₁ ih n => suc {ih n}
                 ] z
     | suc => x ih y z i => suc {ih y z i}
     ]

nat-path.cooltt:58.11-58.26 [Info]:
  Computed normal form of trans-left-unit as
   A p k i =>
   hcom A 0 1 {k <= 0 ∨ i <= 0 ∨ 1 <= i}
     {j _x =>
      [ j <= 0 ∨ i <= 0 => p 0
      | 1 <= i => p j
      | k <= 0 =>
        hcom A 0 1 {i <= 0 ∨ 1 <= i ∨ j <= 0 ∨ 1 <= j}
          {l _x₂ =>
           [ l <= 0 ∨ i <= 0 ∨ 1 <= j =>
             hcom A 0 i {l <= 0 ∨ 1 <= l}
               {j₁ _x₄ => [ j₁ <= 0 ∨ l <= 0 => p 0 | 1 <= l => p j₁ ]}
           | 1 <= i ∨ j <= 0 =>
             hcom A 0 j {l <= 0 ∨ 1 <= l}
               {j₁ _x₄ => [ j₁ <= 0 ∨ l <= 0 => p 0 | 1 <= l => p j₁ ]}
           ]}
      ]}

nat-path.cooltt:59.11-59.27 [Info]:
  Computed normal form of trans-right-unit as
   A p _x _x₁ =>
   hcom A 0 _x {_x₁ <= 0 ∨ 1 <= _x₁}
     {j _x₂ => [ j <= 0 ∨ _x₁ <= 0 => p _x₁ | 1 <= _x₁ => p 1 ]}

nat-path.cooltt:60.11-60.26 [Info]:
  Computed normal form of trans-symm-refl as
   A p k i =>
   hcom A 0 1 {k <= 0 ∨ i <= 0 ∨ 1 <= i}
     {j _x =>
      hcom A 0 i {j <= 0 ∨ 1 <= j}
        {j₁ _x₁ => [ j₁ <= 0 ∨ 1 <= j => p 0 | j <= 0 => p j₁ ]}}

nat-path.cooltt:82.11-82.15 [Info]:
  Computed normal form of test as
   p i =>
   hcom nat 0 1 {i <= 0 ∨ 1 <= i}
     {_x _x₁ =>
      [ _x <= 0 ∨ 1 <= i =>
        elim {p 0} @ {_x₃ => nat} [ zero => 0
                                  | suc => _x₃ _x₄ => 0
                                  ]
      | i <= 0 =>
        elim {p _x} @ {_x₃ => nat} [ zero => 0
                                   | suc => _x₃ _x₄ => 0
                                   ]
      ]}

nat-path.cooltt:84.11-84.16 [Info]:
  Computed normal form of test2 as
   i =>
   hcom nat 0 1 {i <= 0 ∨ 1 <= i}
     {_x _x₁ => [ _x <= 0 ∨ 1 <= i => 0 | i <= 0 => 0 ]}

--------------------[nat.cooltt]--------------------
nat.cooltt:9.11-9.16 [Info]:
  Computed normal form of + 2 3 as 5

--------------------[patch.cooltt]--------------------
patch.cooltt:10.49-10.50 [Info]:
  Emitted hole:
    |- ? : type
    
    Boundary:
    ⊤
    |- nat


patch.cooltt:10.57-10.58 [Info]:
  Emitted hole:
    |- ? : nat
    
    Boundary:
    ⊤
    |- 4


patch.cooltt:12.7-12.15 [Info]:
  el-patch
  : type
  = sig (A : ext type ⊤ {_x => nat}) (a : ext nat ⊤ {_x => 4}) 

patch.cooltt:13.7-13.23 [Info]:
  el-patch-partial
  : type
  = sig (A : ext type ⊤ {_x => nat}) (a : nat) 

patch.cooltt:14.7-14.20 [Info]:
  patch/inhabit
  : el-patch
  = struct (A : nat) (a : 4) 

patch.cooltt:15.7-15.34 [Info]:
  patch-partial/inhabit/infer
  : el-patch-partial
  = struct (A : nat) (a : 4) 

patch.cooltt:16.7-16.26 [Info]:
  patch/inhabit/infer
  : el-patch
  = struct (A : nat) (a : 4) 

patch.cooltt:19.7-19.20 [Info]:
  patch-depends
  : type
  = sig (A : ext type ⊤ {_x => nat}) (B : ext type ⊤ {_x => nat}) 

patch.cooltt:25.7-25.14 [Info]:
  testing
  : (A : type) → (Z : type) → (B : (_x : A) → type) → (p : (_x : Z) → 
  sig (x : A) (bx : B x) ) → (z : Z) → sig (x : ext A ⊤ {_x => p z @ x}) 
                                       (bx : ext {B {p z @ x}} ⊤ {_x =>
                                                                  p z @ bx})
                                       
  = A Z B p z => struct (x : p z @ x) (bx : p z @ bx) 

patch.cooltt:28.79-28.82 [Info]:
  fail total-space/fail:
  Expected type = (_x : sig (A : type) (a : A) ) → (_x₁ : nat) → type

patch.cooltt:39.7-39.15 [Info]:
  category
  : type
  = sig (ob : type) (hom : (_x : sig (s : ob) (t : ob) ) → type) 
    (idn : (x : ob) → sig (s : ext ob ⊤ {_x => x}) (t : ext ob ⊤ {_x => x}) 
                      (fib : hom {struct (s : x) (t : x) }) )
    (seq : (f : sig (s : ob) (t : ob) (fib : hom {struct (s : s) (t : t) }) ) → (g : 
    sig (s : ext ob ⊤ {_x => f @ t}) (t : ob) 
    (fib : hom {struct (s : f @ t) (t : t) }) ) → sig (s : ext ob ⊤ {
                                                           _x => f @ s})
                                                  (t : ext ob ⊤ {_x => g @ t})
                                                  (fib : hom {struct (s : 
                                                              f @ s) 
                                                              (t : g @ t) })
                                                  )
    (seqL : (f : sig (s : ob) (t : ob) (fib : hom {struct (s : s) (t : t) }) ) → path {
    sig (s : ext ob ⊤ {_x => f @ s}) (t : ext ob ⊤ {_x => f @ t}) 
    (fib : hom {struct (s : f @ s) (t : f @ t) }) } {struct (s : f @ s) 
                                                     (t : f @ t) 
                                                     (fib : seq {struct (s : 
                                                                 f @ s) 
                                                                 (t : 
                                                                 f @ s) 
                                                                 (fib : 
                                                                 idn {
                                                                 f @ s} @ fib)
                                                                 } {struct (s : 
                                                                    f @ s) 
                                                                    (t : 
                                                                    f @ t) 
                                                                    (fib : 
                                                                    f @ fib) } @ fib)
                                                     } {struct (s : f @ s) 
                                                        (t : f @ t) 
                                                        (fib : f @ fib) })
    (seqR : (f : sig (s : ob) (t : ob) (fib : hom {struct (s : s) (t : t) }) ) → path {
    sig (s : ext ob ⊤ {_x => f @ s}) (t : ext ob ⊤ {_x => f @ t}) 
    (fib : hom {struct (s : f @ s) (t : f @ t) }) } {struct (s : f @ s) 
                                                     (t : f @ t) 
                                                     (fib : seq {struct (s : 
                                                                 f @ s) 
                                                                 (t : 
                                                                 f @ t) 
                                                                 (fib : 
                                                                 f @ fib) } {
                                                            struct (s : 
                                                            f @ t) 
                                                            (t : f @ t) 
                                                            (fib : idn {
                                                                   f @ t} @ fib)
                                                            } @ fib)
                                                     } {struct (s : f @ s) 
                                                        (t : f @ t) 
                                                        (fib : f @ fib) })
    (seqA : (f : sig (s : ob) (t : ob) (fib : hom {struct (s : s) (t : t) }) ) → (g : 
    sig (s : ext ob ⊤ {_x => f @ t}) (t : ob) 
    (fib : hom {struct (s : f @ t) (t : t) }) ) → (h : sig (s : ext ob ⊤ {
                                                                _x => 
                                                                g @ t})
                                                       (t : ob) 
                                                       (fib : hom {struct (s : 
                                                                   g @ t) 
                                                                   (t : t) })
                                                       ) → path {sig (s : 
                                                                 ext ob ⊤ {
                                                                 _x => 
                                                                 f @ s}) 
                                                                 (t : 
                                                                 ext ob ⊤ {
                                                                 _x => 
                                                                 h @ t}) 
                                                                 (fib : hom {
                                                                 struct (s : 
                                                                 f @ s) 
                                                                 (t : 
                                                                 h @ t) }) } {
    struct (s : f @ s) (t : h @ t) 
    (fib : seq {struct (s : f @ s) (t : f @ t) (fib : f @ fib) } {struct (s : 
                                                                  f @ t) 
                                                                  (t : 
                                                                  h @ t) 
                                                                  (fib : 
                                                                  seq {
                                                                  struct (s : 
                                                                  f @ t) 
                                                                  (t : 
                                                                  g @ t) 
                                                                  (fib : 
                                                                  g @ fib) } {
                                                                  struct (s : 
                                                                  g @ t) 
                                                                  (t : 
                                                                  h @ t) 
                                                                  (fib : 
                                                                  h @ fib) } @ fib)
                                                                  } @ fib)
    } {struct (s : f @ s) (t : h @ t) 
       (fib : seq {struct (s : f @ s) (t : g @ t) 
                   (fib : seq {struct (s : f @ s) (t : f @ t) (fib : f @ fib) } {
                          struct (s : f @ t) (t : g @ t) (fib : g @ fib) } @ fib)
                   } {struct (s : g @ t) (t : h @ t) (fib : h @ fib) } @ fib)
       })
    

patch.cooltt:52.7-52.16 [Info]:
  test-auto
  : (fam : (_x : sig (x : nat) ) → type) → type
  = fam => sig (x : nat) (fib : fam {struct (x : x) }) 

patch.cooltt:55.7-55.22 [Info]:
  test-auto-patch
  : (fam : (_x : sig (x : nat) ) → type) → type
  = fam => sig (x : ext nat ⊤ {_x => 0}) (fib : fam {struct (x : 0) }) 

patch.cooltt:59.7-59.24 [Info]:
  test-unfold-total
  : (fam : (_x : sig (x : nat) ) → U) → U
  = fam => sig (x : nat) (fib : fam {struct (x : x) }) 

--------------------[path-types.cooltt]--------------------
path-types.cooltt:8.11-8.20 [Info]:
  Computed normal form of formation as
   A a b =>
   ext {i => A i} {i => i <= 0 ∨ 1 <= i} {i _x =>
                                          [ i <= 0 => a | 1 <= i => b ]}

path-types.cooltt:21.11-21.17 [Info]:
  Computed normal form of myrefl as A a i => a

path-types.cooltt:32.11-32.17 [Info]:
  Computed normal form of funext as A B f g h i x => h x i

path-types.cooltt:55.11-55.18 [Info]:
  Computed normal form of pairext as A B p q h i => [ fst h i , snd h i ]

--------------------[prelude.cooltt]--------------------
--------------------[record.cooltt]--------------------
record.cooltt:11.7-11.12 [Info]:
  basic
  : type
  = sig (foo∷x : nat) (bar : (_x : nat) → nat) 

record.cooltt:12.7-12.21 [Info]:
  basic∷inhabit
  : basic
  = struct (foo∷x : 1) (bar : {x => suc x}) 

record.cooltt:13.11-13.25 [Info]:
  Computed normal form of basic∷inhabit as
   struct (foo∷x : 1) (bar : {x => suc x}) 

record.cooltt:14.11-14.32 [Info]:
  Computed normal form of basic∷inhabit @ foo∷x as 1

record.cooltt:15.11-15.31 [Info]:
  Computed normal form of {basic∷inhabit @ bar} 1 as 2

record.cooltt:32.7-32.13 [Info]:
  depend
  : type
  = sig (tp : type) (fun : (_x : tp) → tp) 

--------------------[repack.cooltt]--------------------
Emitted namespace under ∷
  ? = { a1 => a1; a2 => a2; a3 => a3 }

Emitted namespace under ∷
  ? = { a2 => a2; a3 => a3; b1 => a1 }

Emitted namespace under ∷
  ? = { a1 => a2; a3 => a3; b1 => a1 }

Emitted namespace under ∷
  ? = { a1 => a1; a2 => a2; a3 => a3 }

--------------------[section.cooltt]--------------------
section.cooltt:5.7-5.17 [Info]:
  x1∷y1∷a1
  : nat
  = 0

section.cooltt:11.7-11.9 [Info]:
  a2
  : nat
  = 10

section.cooltt:18.7-18.9 [Info]:
  a3
  : nat
  = 30

section.cooltt:24.7-24.13 [Info]:
  x4∷b4
  : nat
  = 40

Emitted namespace under ∷
  ? = { a2 => a2; a3 => a3; x1∷y1∷a1 => a1; x4∷b4 => a4 }

--------------------[selfification.cooltt]--------------------
selfification.cooltt:8.11-8.18 [Info]:
  Computed normal form of testing as
   _x _x₁ _x₂ p _x₃ => [ fst {p _x₃} , snd {p _x₃} ]

--------------------[v.cooltt]--------------------
v.cooltt:13.11-13.17 [Info]:
  Computed normal form of v-test as
   r A =>
   V r {_x => A} A {_x =>
                    [ x => x
                    , x =>
                      [ [ x , _x₁ => x ]
                      , p i =>
                        [ hcom A 1 0 {i <= 0 ∨ 1 <= i}
                            {k _x₁ =>
                             [ 1 <= k => x
                             | 1 <= i => snd p k
                             | i <= 0 => x
                             ]}
                        , _x₁ =>
                          hcom A 1 _x₁ {i <= 0 ∨ 1 <= i}
                            {k _x₂ =>
                             [ 1 <= k => x
                             | 1 <= i => snd p k
                             | i <= 0 => x
                             ]}
                        ]
                      ]
                    ]}

v.cooltt:21.11-21.15 [Info]:
  Computed normal form of cool as A a => coe {_x => A} 0 1 a

v.cooltt:22.11-22.16 [Info]:
  Computed normal form of cool2 as
   A a i =>
   hcom A 0 1 {i <= 0}
     {_x _x₁ =>
      [ _x <= 0 => coe {_x₃ => A} i 0 a
      | i <= 0 =>
        hcom A 1 0 {_x <= 0 ∨ 1 <= _x}
          {k _x₃ => [ 1 <= k => a | 1 <= _x => a | _x <= 0 => a ]}
      ]}

v.cooltt:28.11-28.16 [Info]:
  Computed normal form of cool3 as A a i => a

--------------------[view.cooltt]--------------------
view.cooltt:2.7-2.9 [Info]:
  a1
  : nat
  = 0

view.cooltt:6.7-6.9 [Info]:
  b1
  : nat
  = 0

Emitted namespace under ∷
  ? = { a1 => a1 }

view.cooltt:16.7-16.9 [Info]:
  a2
  : nat
  = 10

view.cooltt:17.7-17.9 [Info]:
  a3
  : nat
  = 20

Emitted namespace under ∷
  ? = { a1 => a1; m1∷a2 => m1∷a2; m1∷a3 => m1∷a3; m2∷a3 => m2∷a3
      ; m2∷a4 => m2∷a4 }

view.cooltt:22.7-22.9 [Info]:
  a2
  : nat
  = 10

view.cooltt:23.7-23.9 [Info]:
  a3
  : nat
  = 30

view.cooltt:24.7-24.9 [Info]:
  a4
  : nat
  = 40

Emitted namespace under ∷
  ? = { a1 => a1; m1∷a2 => m1∷a2; m1∷a3 => m1∷a3; m2∷a3 => m2∷a3
      ; m2∷a4 => m2∷a4 }

Emitted namespace under ∷
  ? = { a2 => m1∷a2; a3 => m2∷a3; a4 => m2∷a4; b1 => a1; m1∷a2 => m1∷a2
      ; m1∷a3 => m1∷a3 }

