def foo : (x : nat) -> (y : nat) * Id nat x y = {
  \x=>
  [x, ?hole1]
}

def sym : (x : nat) (y : nat) (p : Id nat x y) -> Id nat y x = {
  \x y p => 
  match p at u v q => Id nat v u with [
  | refl u => refl
  ]
}
