


def fully-patched (fam : sig [x : nat] -> type) (fib : fam {struct [x := 0]}) : fam # [x := 0] :=
    fib
#print fully-patched

def not-fully-patched (fam : sig [x : nat] -> type) (fib : fam {struct [x := 0]}) : fam :=
    struct [x := 0, fib := fib]
#print not-fully-patched

def no-insert-fib (fam : sig [x : nat] -> type) (total : fam) : nat :=
    total.x
#print no-insert-fib

def insert-fib-plain (fam : sig [x : nat] -> type) (total : fam) : fam {struct [x := total.x]} :=
    total
#print insert-fib-plain

def insert-fib-pi : sig [fam : sig [x : nat] -> type, test : fam -> nat] :=
  struct
    def fam := _ => nat -> nat
    def test := total => total 0
  end
#print insert-fib-pi

def insert-fib-sg : sig [fam : sig [x : nat] -> type, test : fam -> nat] :=
  struct
    def fam := _ => nat * nat
    def test := total => fst total
  end
#print insert-fib-sg

def no-insert-fib-record : sig [fam : sig [x : nat] -> type, test : fam -> nat] :=
  struct
    def fam := _ => sig [y : nat]
    def test := total => total.fib.y
  end

#print no-insert-fib-record

def test-hole (fam : sig [x : nat] -> type) : fam # [x := 0] := ?
