def formation : {
  (A : dim -> univ) (a : A 0) (b : A 1) -> univ
} = {
  \A a b =>  -- normal lambda form
  path A a b  -- this is the new form for paths
}

normalize formation

def myrefl : {
  (A : univ) (a : A) -> path {\_ => A} a a -- also existing lambda form i think, other things quantify over dim with this notation
} = {
  \A a i => a
}

normalize myrefl

def funext : {
  (A : univ) (B : univ) (f : (x : A) -> B) (g : (x : A) -> B)
  (h : (x : A) -> path {\_ => B} {f x} {g x})
  -> path {\_ => (x : A) -> B} f g
} = {
  \A B f g h i x =>
  h x i
}

normalize funext

def pairext : {
  (A : univ) (B : univ) (p : (x : A) * B) (q : (x : A) * B)
  (h : (x : path {\_ => A} {fst p} {fst q}) * path {\_ => B} {snd p} {snd q})
  -> path {\_ => (x : A) * B} p q
} = {
  \A B p q h i =>
  [ {fst h} i
  , {snd h} i
  ]
}

normalize pairext
