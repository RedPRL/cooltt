name: Docker
on: [push]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          tags: |
            ghcr.io/redprl/cooltt:edge-ubuntu
            ghcr.io/redprl/cooltt:edge-ubuntu-static
          push: true
          cache-from: type=gha
          cache-to: type=gha
  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - run: |
          docker run \
            --entrypoint '/bin/sh' ghcr.io/redprl/cooltt:edge-ubuntu '-c' \
            'make test'
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile-deploy
          tags: |
            ghcr.io/redprl/cooltt:edge
            ghcr.io/redprl/cooltt:edge-static
          push: true
  doc:
    name: Doc
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/doc') }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - run: |
          docker run \
            -v ${PWD}/output:/output ${{ needs.build.outputs.image-tag }} \
            --entrypoint '/bin/sh' ghcr.io/redprl/cooltt:edge-ubuntu '-c' \
            'make doc && cp -r _build/default/_doc/_html /output/'
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: "./output/_html"
