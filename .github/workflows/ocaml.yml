name: Build and test
on: [push,pull_request]
jobs:
  run:
    name: Build
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        ocaml-compiler: ['4.12.0']
    steps:
    - uses: actions/checkout@v2
    - name: Cache ~/.opam
      uses: actions/cache@v2
      id: cache-opam
      with:
        path: ~/.opam
        key: ${{ runner.os }}-opam
    - uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}
        dune-cache: true
    # Even if we load from the cache, we still may need to
    # install external dependencies! We also need to bring
    # 'dune' into scope for this, hence the 'opam env'
    - name: Opam Install
      if: steps.cache-opam.outputs.cache-hit != 'true'
      run: opam install . --deps-only
    - name: Opam Eval
      if: steps.cache-opam.outputs.cache-hit == 'true'
      run: eval $(opam env) && dune external-lib-deps --missing @install
    - run: make
    - run: make test
